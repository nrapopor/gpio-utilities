#general
ValidateGPIO.error-message-fmt=Command Line Parsing failed.  Reason: %1$s
ValidateGPIO.list-separator-regex=[ ]*,[ ]*
PinDescriptor.query-format-JSON=\n\t"PinDescriptor" = { "bulldogHeaderPin" = "%1$s", "header" = "%2$s", "pin" = "%3$s", "name" ="%4$s", "capePin" = "%5$s", "kernelPin" = "%6$s" }
PinDescriptor.query-format-JSON-header=\n{
PinDescriptor.query-format-JSON-trailer=\n}\n
PinDescriptor.query-format-JSON-sep=,
PinDescriptor.query-format-XML-header=\n<PinDescriptors>
PinDescriptor.query-format-XML-trailer=\n</PinDescriptors>
PinDescriptor.query-format-XML-sep=
PinDescriptor.query-format-XML=\n\t<PinDescriptor><bulldogHeaderPin>%1$s</bulldogHeaderPin><header>%2$s</header><pin>%3$s</pin><name>%4$s</name><capePin>%5$s</capePin><kernelPin>%6$s</kernelPin></PinDescriptor>
PinDescriptor.query-format-CSV-header=bulldogHeaderPin,header,pin,name,capePin,kernelPin
PinDescriptor.query-format-CSV-trailer=
PinDescriptor.query-format-CSV-sep=
PinDescriptor.query-format-CSV=\n%1$s,%2$s,%3$s,%4$s,%5$s,%6$s
PinDescriptor.bulldog-pin-format=%1$s_%2$s
PinDescriptor.cape-pin=CapePinId
PinDescriptor.header=Header
PinDescriptor.header-pin=HeaderPin
PinDescriptor.name=Name
#Query Format
ValidateGPIO.query-format-long=query-format
ValidateGPIO.query-format-short=f
ValidateGPIO.query-format-name=query response format
ValidateGPIO.query-format-description=The query response format for the queried pins. \nDefault: %1$s
ValidateGPIO.query-format-default=JSON
#valid formats are CSV,JSON,XML
ValidateGPIO.query-format-valid-list=CSV,JSON,XML

#Direction
ValidateGPIO.direction-long=direction
ValidateGPIO.direction-short=d
ValidateGPIO.direction-name=pin direction
ValidateGPIO.direction-description=The direction of the testing -- (in)put or (out)put. \nDefault: %1$s
ValidateGPIO.direction-default=out
ValidateGPIO.direction-valid-list=out, in
#Query
ValidateGPIO.query-long=query-pin-mapping
ValidateGPIO.query-short=q
ValidateGPIO.query-name=GPIO Pins
ValidateGPIO.query-description=Display the pin mapping: in a JSON format.  \nDefault: %1$s \nValid values: The same as the pins option
ValidateGPIO.query-default=all
#query
ValidateGPIO.pins-long=pins
ValidateGPIO.pins-name=GPIO Pins
ValidateGPIO.pins-short=p
ValidateGPIO.pins-cape-pin-map=/cape-pin-map.csv
ValidateGPIO.pins-header-regex=P[89]_([1-9]|[1-3][0-9]|4[0-6])
ValidateGPIO.pins-description=The list of pins to test. \nDefault: %1$s. \nValid Values: cape pins list (P0 -- P47), 'all' and the header pin(s) in the P[89]_([1-9]|[1-3][0-9]|4[0-6]) format, or a mix of any three. However if 'all' is included it will override the rest of the values
ValidateGPIO.pins-default=P0,P1,P2,P3,P4,P5,P6,P7
